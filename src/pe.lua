-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["globe-mine"] = {
                    
                    
                    
                    {
                    pe_fixture_id = "", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 0, maskBits = 65535, groupIndex = 0 },
                    radius = 10.000
                    }
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "umbrella", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -51, 318  ,  -62, 280  ,  58, 290  ,  46, 321  ,  1, 345  }
                    }
                     ,
                    {
                    pe_fixture_id = "umbrella", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   58, 290  ,  -62, 280  ,  -10, 223  ,  30, 223  }
                    }
                    
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "hand", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -51, -312  ,  2, -333  ,  59, -298  ,  -40, -252  ,  -73, -285  }
                    }
                     ,
                    {
                    pe_fixture_id = "hand", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -40, -252  ,  59, -298  ,  38, -219  ,  -11, -209  }
                    }
                     ,
                    {
                    pe_fixture_id = "hand", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   2, -333  ,  -51, -312  ,  -36, -333  }
                    }
                    
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "spring", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -295, 69  ,  -345, 10  ,  -327, -46  ,  -287, -69  ,  -225, -34  ,  -216, 50  }
                    }
                    
                    
                    
                     ,
                    
                    
                    {
                    pe_fixture_id = "globe", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -221, -25  ,  -89, -207  ,  101, -202  ,  223, 32  ,  176, 139  ,  64, 216  ,  -74, 213  ,  -191, 125  }
                    }
                     ,
                    {
                    pe_fixture_id = "globe", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -89, -207  ,  -221, -25  ,  -183, -140  }
                    }
                     ,
                    {
                    pe_fixture_id = "globe", density = 2, friction = 0, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   180, -135  ,  221, -50  ,  223, 32  ,  101, -202  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

